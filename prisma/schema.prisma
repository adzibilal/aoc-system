datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Cabang {
    id            String          @id @default(auto()) @map("_id") @db.ObjectId
    nama          String
    alamat        String
    nomorTelepon  String
    email         String?
    status        String?         @default("aktif")
    Produk        Produk[]
    BahanBaku     BahanBaku[]
    Pesanan       Pesanan[]
    AnggotaCabang AnggotaCabang[]
    createdAt     DateTime?       @default(now())
    updatedAt     DateTime?       @updatedAt
    Inventory     Inventory[]
}

model Produk {
    id               String          @id @default(auto()) @map("_id") @db.ObjectId
    nama             String
    deskripsi        String?
    harga            Float
    bahanBakuResep   Resep[]
    image            String?
    Cabang           Cabang          @relation(fields: [cabangId], references: [id])
    cabangId         String          @db.ObjectId
    kategori         KategoriProduk? @relation(fields: [kategoriProdukId], references: [id])
    kategoriProdukId String?         @db.ObjectId
    DetailPesanan    DetailPesanan[]
    createdAt        DateTime?       @default(now())
    updatedAt        DateTime?       @updatedAt
}

model KategoriProduk {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    nama      String
    Produk    Produk[]
    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

model BahanBaku {
    id             String          @id @default(auto()) @map("_id") @db.ObjectId
    nama           String
    satuan         String
    stok           Float
    hargaPerSatuan Float
    kategori       String?
    Resep          Resep[]
    Cabang         Cabang          @relation(fields: [cabangId], references: [id])
    cabangId       String          @db.ObjectId
    StokBahanBaku  StokBahanBaku[]
    createdAt      DateTime?       @default(now())
    updatedAt      DateTime?       @updatedAt
}

model Resep {
    id          String    @id @default(auto()) @map("_id") @db.ObjectId
    jumlah      Float
    Produk      Produk    @relation(fields: [produkId], references: [id])
    produkId    String    @db.ObjectId
    BahanBaku   BahanBaku @relation(fields: [bahanBakuId], references: [id])
    bahanBakuId String    @db.ObjectId
    createdAt   DateTime? @default(now())
    updatedAt   DateTime? @updatedAt
}

model Pesanan {
    id            String          @id @default(auto()) @map("_id") @db.ObjectId
    tanggal       DateTime        @default(now())
    namaPelanggan String?
    nomorMeja     Int?
    status        String          @default("BELUM DIBAYAR")
    Cabang        Cabang          @relation(fields: [cabangId], references: [id])
    cabangId      String          @db.ObjectId
    DetailPesanan DetailPesanan[]
    Pengguna      Pengguna        @relation(fields: [penggunaId], references: [id])
    penggunaId    String          @db.ObjectId
    createdAt     DateTime?       @default(now())
    updatedAt     DateTime?       @updatedAt
}

model DetailPesanan {
    id          String    @id @default(auto()) @map("_id") @db.ObjectId
    jumlah      Int
    hargaSatuan Float
    subtotal    Float
    Pesanan     Pesanan   @relation(fields: [pesananId], references: [id])
    pesananId   String    @db.ObjectId
    Produk      Produk    @relation(fields: [produkId], references: [id])
    produkId    String    @db.ObjectId
    createdAt   DateTime? @default(now())
    updatedAt   DateTime? @updatedAt
}

model StokBahanBaku {
    id                String    @id @default(auto()) @map("_id") @db.ObjectId
    tanggalPenerimaan DateTime?
    tanggalKadaluarsa DateTime?
    jumlahMasuk       Float
    jumlahKeluar      Float
    BahanBaku         BahanBaku @relation(fields: [bahanBakuId], references: [id])
    bahanBakuId       String    @db.ObjectId
    createdAt         DateTime? @default(now())
    updatedAt         DateTime? @updatedAt
}

model Pengguna {
    id            String          @id @default(auto()) @map("_id") @db.ObjectId
    username      String          @unique
    password      String
    role          String
    nama          String
    image         String?
    AnggotaCabang AnggotaCabang[]
    Pesanan       Pesanan[]
    createdAt     DateTime?       @default(now())
    updatedAt     DateTime?       @updatedAt
}

model AnggotaCabang {
    id         String    @id @default(auto()) @map("_id") @db.ObjectId
    pengguna   Pengguna  @relation(fields: [penggunaId], references: [id])
    penggunaId String    @db.ObjectId
    cabang     Cabang    @relation(fields: [cabangId], references: [id])
    cabangId   String    @db.ObjectId
    createdAt  DateTime? @default(now())
    updatedAt  DateTime? @updatedAt
}

model Inventory {
    id        String            @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    detail    InventoryDetail[]
    createdAt DateTime?         @default(now())
    updatedAt DateTime?         @updatedAt
    cabang    Cabang            @relation(fields: [cabangId], references: [id])
    cabangId  String            @db.ObjectId
}

model InventoryDetail {
    id          String     @id @default(auto()) @map("_id") @db.ObjectId
    month       Int
    year        Int
    stockAwal   Int
    stockAkhir  Int
    keterangan  String
    createdAt   DateTime?  @default(now())
    updatedAt   DateTime?  @updatedAt
    Inventory   Inventory? @relation(fields: [inventoryId], references: [id])
    inventoryId String?    @db.ObjectId
}
